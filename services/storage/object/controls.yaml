common_controls:
  - CCC.C01 # Prevent unencrypted requests
  - CCC.C02 # Ensure data encryption at rest all stored data
  - CCC.C03 # Implement multi-factor authentication (MFA) for access
  - CCC.C04 # Log all access and changes
  - CCC.C05 # Prevent access from untrusted entities
  - CCC.C06 # Prevent deployment in restricted regions
  - CCC.C07 # Alert on non-human enumeration
controls:
  - id: CCC.ObjStor.C01
    title: Prevent Requests to Buckets or Objects with Untrusted KMS Keys
    objective: |
      Prevent any requests to object storage buckets or objects using untrusted
      KMS keys to protect against unauthorized data encryption that can impact
      data availability and integrity.
    control_family: Data
    threats:
      - CCC.TH01
      - CCC.TH02
      - CCC.TH03
    nist_csf: PR.DS-4
    mitre_attack: T1486
    control_mappings:
      CCM: 
        - DSI-04
        - DSI-05
      ISO_27001: 
        - 2013 A.12.3.1
      NIST_800_53: 
        - CP-6
        - CP-9
    test_requirements:
      tlp_red:
        01: |
          Verify that access policies for cloud storage buckets and objects
          prevent requests with untrusted KMS keys. In this case, an untrusted
          KMS key is one that is not specified as trusted by the cloud storage
          bucket owner.
  - id: CCC.ObjStor.C02
    title: Prevent ad-hoc privilege escalation and access control lists
    control_family: Identity and Access Management
    objective: |
      Ensure that the intended access controls are uniformally enforced for
      all users and roles to enforce the principle of least privilege.
    test_requirements: # TODO
      tlp_green:
        01: | # TODO
          Verify that all users and roles have the minimum required permissions
          to perform their tasks.
        02: | # TODO
          Confirm that all users and roles have the same permissions in all
          environments.
      tlp_amber:
      tlp_red:
      tlp_clear:
  - id: CCC.ObjStor.C03
  # bucket retention policy is locked 
    title: Prevent bucket deletion through irrevoable bucket retention policy
    control_family: Data
    objective: |
      Ensure that object storage bucket is not deleted after creation,
      and that the preventative measure cannot be unset.
    threats: [] # TODO
    nist_csf: # TODO
    test_requirements:
      tlp_green: # this might not be necessary for internal-only amber/red?
        01: |
          Verify that data stored in object storage cannot be deleted.
        02: |
          Confirm that the bucket retention policy cannot be unset.
  - id: CCC.ObjStor.C04
    title: Enable multi-zone or multi-region data replication
    control_family: Data
    objective: |
      Ensure that data stored in object storage is replicated across multiple
      zones or regions to protect against data loss due to hardware failures,
      natural disasters, or other catastrophic events.
    threats: [] # TODO
    nist_csf: # TODO
    test_requirements: # GCS-CO-6.11/12 â€” Can this be tested beyond reading the config?
      tlp_green:
        01: |
          Verify that data stored in object storage is replicated across multiple
          zones or regions.
  - id: CCC.ObjStor.C05
    title: Objects have an effective retention policy by default
    control_family: Data
  - id: CCC.ObjStor.C06
    title: Objects have an effective retention policy by default
    control_family: Data
    test_requirements: # read config for a policy + try deleting immediately after creation of a new file
      tlp_green:
      tlp_amber:
      tlp_red:
      tlp_clear:
  - id: CCC.ObjStor.C07
    title: Versioning is enabled for all objects in the bucket
    control_family: Data
    objective: |
      Ensure that versioning is enabled for all objects stored in the object
      storage bucket to enable recovery of previous versions of objects in case
      of loss or corruption.
    threats: [] # TODO
    nist_csf: # TODO
    test_requirements:
      tlp_green:
        01: |
          When two objects with the same name are uploaded to the bucket, verify
          that the object with the same name is not overwritten and that both
          objects are stored with unique identifiers.
  - id: CCC.ObjStor.C08
    title: Access logs are stored in a separate bucket
    control_family: Data
    objective: |
      Ensure that access logs for object storage buckets are stored in a separate
      bucket to protect against unauthorized access, tampering, or deletion of
      logs.
    threats: [] # TODO
    nist_csf: # TODO
    test_requirements:
      tlp_green:
        01: | # TODO: This could become recursive if we include the logbucket in the controlled architecure... unless we have that one set to TLP Clear, no logging needed?
          Access logs for object storage buckets are stored in a separate bucket.  

    


